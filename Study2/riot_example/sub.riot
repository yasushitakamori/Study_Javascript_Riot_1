<subb>
    <p>{ props.message2 }</p>
    <div id ="container">
    <h1>{ props.title}</h1>
    
    <form onsubmit={ addTodo}>
      <input name="todo" value="" oninput={input} placeholder="please input task" />
      <button disabled={ !state.isInput }>
        Add #{state.todoList.length + 1}
       </button>
       <button class="danger" disabled={ !(state.todoList.length > 0)} onclick={ deleteDoneTodos}>
          delete done
       </button>
    </form>
    
    <h4>todo list</h4>
    <ul>
       <li each={ todo in state.todoList } key={ todo.id}>
         <label class={ todo.done ? 'complete' : null }>
           <input
             type="checkbox"
             checked={ todo.done }
             onclick={ () => toggle(todo)}
            />
           { todo.title}
         </label>
         <button class="danger" onclick={ () => deleteTodo(todo)}>
          delete
          </button>
       </li>
    </ul>
    
    </div>
    
    <script>
      export default{
       state: {
         todoList: [],
         nextId: 0,
         isInput: false,
         hasDoneTodo: true
       },
       onBeforeMount(props, state){
          state.nextId = props.nextId
          state.todoList = props.todoList
          state.hasDoneTodo = this.checkDoneTodo()
       },
       addTodo(e){
	       e.preventDefault()
	       if(e.target.todo.value){
	          const updatedTodoList = [
	             ...this.state.todoList,
	             {
	               id: this.state.nextId + 1,
	               ...newTask
	             }
	          ]
	          
		         this.update({
		           hasDoneTodo: this.checkDoneTodo(updatedTodoList),
		           todoList: updatedTodoList,
		           nextId: this.state.nextId + 1,
		           isInput: false
		        }) 
	            e.target.todo.value = ""      
	       }
	    },
	    input(e){
		    this.update({
		      isInput: e.target.value
		    })
	    },
	    toggle(todo){
		    todo.done = !todo.done
		    this.update({
		       hasDoneTodo: this.checkDoneTodo()
		    })
	   },
	   checkDoneTodo(updatedTodoList){
	     const todoList = updatedTodoList || this.state.todoList
	     return todoList.some(item => item.done === true )
	   },
	   deleteTodo(todo){
	      if(window.confirm('本当に削除してもよろしいですか？')) {
	        const updateTodoList 
	          = this.state.todoList.filter(item => item.id !== todo.id)
		     this.update({
		       hasDoneTodo: this.checkDoneTodo(updatedTodoList),
		       todoList: updatedTodoList
		     })
	      }
	   },
	   deleteDoneTodos(){
	     if(window.confirm('本当に全てのtodoを削除してもよろしいです？')){
	        this.update({ 
	          hasDoneTodo: false,
	          todoList: []
	        })
	     }
	   }    
	 }
    </script>
</subb>
